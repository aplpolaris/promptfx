# Library of prompts
#
# Usage:
#  - preconfigured prompt file in "prompts.yaml" in promptkt
#  - custom prompt file in "prompts.yaml" in the current directory
#
# Syntax:
#  - mustache templates: https://mustache.github.io/mustache.5.html
#  - double braces to insert text {{...}}
#  - triple braces to insert text without escaping HTML {{{...}}}
#
# Keywords:
#  - many templates expect {{input}} and/or {{instruct}}
#  - {{today}} is always replaced with the current date
#
---
chat-back: |
  You are role-playing as {{person}} talking about {{topic}} with {{other persons}} {{setting}}.
  Your response should be what they might say {{script}} and have a {{tone}} tone.

entity-extraction: |
  Extract content from the given text. The result should be a list of {{mode}}{{#format}} formatted as {{format}}{{/format}}. 
  ```
  {{{input}}}
  ```

example-color: |
  Create a 6-digit CSS code (e.g. `#808080`) for a color like the following text.
  text: {{input}}
  background-color: #

example-emoji: |
  Text: I love you
  Emoji: ❤️
  Text: Star Wars
  Emoji: 💫 🗡
  Text: {{input}}
  Emoji:

question-answer: |
  Answer the following question about the text below. If you do not know the answer, say you don't know.
  Question: {{{instruct}}}
  ```
  {{{input}}}
  ```
  Answer:

sentiment-classify: |
  Classify the sentiment in this text as {{instruct}}:
  ```
  {{{input}}}
  ```

summarization: |
  Summarize the following. {{instruct}}:
  ```
  {{{input}}}
  ```

text-to-json: |
  Extract information from the following text:
  ```
  {{{input}}}
  ```
  {{#guidance}}The result should contain {{guidance}}.{{/guidance}}
  The result must be formatted as {{#format}}{{format}}{{/format}}{{^format}}structured data{{/format}}.
  {{#example}}
  The result schema should match the following example:
  ```
  {{{example}}}
  ```
  {{/example}}

traffic-api-request: |
  Today is {{today}}. Convert the following natural language request for traffic information into a JSON object:
  ```
  {{{input}}}
  ```
  The JSON object must conform to the following scheme:
  ```
  {
      "latitude": 40.712776,
      "longitude": -74.005974
  }
  ```

translate-text: |
  Translate this text to {{instruct}}:
  ```
  {{{input}}}
  ```

weather-api-request: |
  Today is {{today}}. Convert the following natural language request for weather information into a JSON object:
  ```
  {{{input}}}
  ```
  The JSON object must conform to the following schema:
  ```
  {
      "city": "Boston, MA",
      "date": "2023-03-04"
  }
  ```

weather-response-formatter: |
  Today is {{today}}. Use the following data to answer a user question.
  If the data indicates unknown or nulls, tell the user there was a problem retrieving weather information.
  If you cannot answer the question directly but there is useful weather information in the data, provide a summary of the JSON as a basic weather forecast.
  Question: {{instruct}}
  ```
  {{{input}}}
  ```

wikipedia-page-guess: |
  What is the title of the Wikipedia page that answers the following question? Give a short answer with your best guess.
  Question: How big is Texas?
  Wikipedia Page: Texas
  Question: {{input}}
  Wikipedia Page:

############################
# DOCUMENT Q&A
############################
# view: Document Q&A
# prefix: question-answer-docs-*
# keywords:
#   {{{instruct}}} - question
#   {{{input}}} - document sections

question-answer-docs: |
  Answer the question using the provided excerpts from factual sources.
  Include citations to all sources used, and only those sources.
  List citations used below the response.
  If there is no relevant content, say you don't know.
  
  Example:
  """
  Question:
    What is the capital of the Maryland?
  Answer:
    The capital of Maryland is Annapolis [1], which is a beautiful city on the Chesapeake Bay [2].
  Citations:
    - [1] american_cities.txt
    - [2] the_chesapeake.txt
  """
  
  Question:
    {{{instruct}}}
  Excerpts:
    {{{input}}}
  Answer:

question-answer-docs2: |
  Here is a collection of document sections, to be used for a question below.
  ```
  {{{input}}}
  ```
  Answer the following question based on the given collection of document sections. If you do not know the answer, say you don't know.
  Include numbered citations.
  
  Question: What is the capital of the Maryland?
  
  Answer: The capital of Maryland is Annapolis [1,3], which is a beautiful city on the Chesapeake Bay [2,3].
  
  [1] american_cities.txt
  [2] a_history_of_annapolis.txt
  [3] maryland.txt

  Question: {{{instruct}}}

  Answer: 

question-answer-docs-basic: |
  Answer the following question based on the given collection of document sections. If you do not know the answer, say you don't know.
  Please also indicate the documents used to answer the question.
  Question: {{{instruct}}}
  ```
  {{{input}}}
  ```
  Answer: 

question-answer-docs-basic-dolly: |
  Below is an instruction that includes a user question and some input. Write a response that appropriately completes the request, and if the answer is not contained within the text below, respond with "I can't answer that". Provide numbered citations for your answer.
  
  ### Instruction
  {{{instruct}}}

  Input:
  {{{input}}}

  ### Response

question-answer-docs-basic-falcon: |
  >>INSTRUCTION<<
  Answer the question using the provided text, and if the answer is not contained within the text below, respond with "I can't answer that". Provide numbered citations for your answer.
  >>CONTEXT<<
  {{{input}}}
  >>QUESTION<<
  {{{instruct}}}
  >>ANSWER<<

question-answer-docs-basic-llama: |
  [INST]
  <<SYS>>
  You are a bot that answers questions succinctly.
  Below is an instruction that includes a user question and some input. Write a response that appropriately completes the request, and if the answer is not contained within the text below, respond with "I can't answer that". Provide numbered citations with your answer. Do not say "Sure" or repeat the question.
  <</SYS>>
  
  Question:
  ```
  {{{instruct}}}
  ```
  
  Input:
  ```
  {{{input}}}
  ```
  [/INST]
  
  Answer:

question-answer-docs-basic-vicuna: |
  ### System: You are an assistant that answers questions succinctly in English, using the context below. If the answer is not contained within the text below, respond with "I can't answer that". Provide numbered citations with your answer.
  ### Human: Here is the context for my question:
  ```
  {{{input}}}
  ```
  ### Human: {{{instruct}}}
  ### Assistant: 

############################
# SNIPPET CONCATENATIONS
############################
# view: Document Q&A
# prefix: snippet-joiner-*
# keywords:
#   {{matches}} - list of snippets
#   {{name}} - name of snippet
#   {{{text}}} - text of snippet

snippet-joiner-basic: |
  {{#matches}}
  Document: {{name}}
  Relevant Text: {{{text}}}
  
  {{/matches}}

snippet-joiner-numbered: |
  {{#matches}}
  - ""{{{text}}}""
    [{{number}}] {{name}}
  
  {{/matches}}

snippet-joiner-citations: |
  {{#matches}}
  [[Citation {{number}}]] {{name}}
  """
  {{{text}}}
  """
  
  {{/matches}}

############################
# DOCUMENT MAPPING
############################
# view: Document Insights
# prefix:
#   document-map-* - prompts to run against all snippets
#   document-reduce-* - method to combine results
# keywords:
#   {{{input}}} - text to process

document-map-summarize: |
  Provide a one-line summary of this text.
  ```
  {{{input}}}
  ```

document-map-math-terms: |
  Generate a JSON list of mathematical concepts in the following text. If there are no mathematical terms, provide an empty list.

  Text:
  ```
  {{{input}}}
  ```
  
  Concepts:

document-reduce-summarize: |
  Combine the following summaries into an outline.
  ```
  {{{input}}}
  ```

document-reduce-author: |
  Use the following summaries to generate a profile of the author of these texts.
  ```
  {{{input}}}
  ```

document-reduce-math-terms: |
  Combine the following lists of mathematical terms into a single list. Group terms that are synonyms.
  ```
  {{{input}}}
  ```